#################################################### LOG PROPERTIES ####################################################
log.file.name       = RobotLegs-Generator-log
log.append.to.file  = true

##################################################### LOG MESSAGES #####################################################
log.message                              = @Invoking RobotLegs-Generator on [${project.name}]
log.generating.message                   = Generating files:

log.create.RobotLegs.directories.message = ${log.message}--> Creating RobotLegs directories
log.create.RobotLegs.libraries.message   = ${log.message}--> Adding libraries
log.create.main.class.and.context		 = ${log.message}--> Adding main class
log.add.event.commmand.message			 = ${log.message}--> Adding event and commmand
log.add.signal.commmand.services.message = ${log.message}--> Adding signal, command and service
log.add.startup.commmand.message		 = ${log.message}--> Adding startup commmand
log.value.object.message		         = ${log.message}--> Adding value object
log.view.mediator.message		         = ${log.message}--> Adding view mediator
log.create.model.class.message		     = ${log.message}--> Adding model class
log.create.service.message				 = ${log.message}--> Adding service class
log.add.event.commmand.services.message  = ${log.message}--> Adding event command service class
log.create.commmand.message				 = ${log.message}--> Adding command class
log.presenter.view.message				 = ${log.message}--> Adding presenter view
log.add.signal.commmand.message          = ${log.message}--> Adding signal and commmand
log.add.signal.commmand.param.message    = ${log.message}--> Adding signal, commmand and param
